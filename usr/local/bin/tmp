#!/usr/bin/env python3
import json
import mimetypes
import sys
import urllib.error
import urllib.request

service = 'https://tmp.fkmclane.net'

class AliasExistsError(Exception):
	pass

class FileTooLargeError(Exception):
	pass

class BadAliasError(Exception):
	pass

class UnknownError(Exception):
	pass

def upload(stream, alias=None):
	if alias:
		url = service + '/' + alias
		method = 'PUT'
	else:
		url = service + '/'
		method = 'POST'

	data = stream.read()
	if isinstance(data, str):
		data = data.encode()

	headers = {}

	headers['Content-Type'] = 'text/plain'

	if stream is not sys.stdin:
		headers['Content-Filename'] = stream.name

		mime = mimetypes.guess_type(stream.name)[0]
		if mime:
			headers['Content-Type'] = mime

	try:
		response = json.loads(urllib.request.urlopen(urllib.request.Request(url, data, headers, method=method)).read().decode())

		return service + response['location']
	except urllib.error.HTTPError as error:
		response = json.loads(error.read().decode())

		if response['error'] == 409:
			raise AliasExistsError() from error
		elif response['error'] == 413:
			raise FileTooLargeError() from error
		elif response['error'] == 404:
			raise BadAliasError() from error
		else:
			raise UnknownError() from error

if __name__ == '__main__':
	import sys

	from argparse import ArgumentParser, FileType

	parser = ArgumentParser(description='upload files to the file drop service at {}'.format(service))
	parser.add_argument('-a', '--alias', dest='alias', help='alias to upload files under (random if omitted)')
	parser.add_argument('file', nargs='?', default=sys.stdin, type=FileType('rb'), help='file to upload (reads from stdin if omitted)')

	args = parser.parse_args()

	try:
		print('created at ' + upload(args.file, args.alias))
	except AliasExistsError:
		print('tmp.py: error: alias already exists', file=sys.stderr)
		sys.exit(3)
	except FileTooLargeError:
		print('tmp.py: error: input file is too large', file=sys.stderr)
		sys.exit(4)
	except BadAliasError:
		print('tmp.py: error: alias does not exist', file=sys.stderr)
		sys.exit(5)
	except UnknownError:
		print('tmp.py: error: an unknown error occured', file=sys.stderr)
		sys.exit(1)
